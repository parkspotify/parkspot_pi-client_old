# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import parkspot_pb2 as parkspot__pb2


class ParkspotStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.GetImage = channel.unary_unary(
            '/parkspot.Parkspot/GetImage',
            request_serializer=parkspot__pb2.Empty.SerializeToString,
            response_deserializer=parkspot__pb2.ParkspotImage.FromString,
        )
        self.GetValidatedImage = channel.unary_unary(
            '/parkspot.Parkspot/GetValidatedImage',
            request_serializer=parkspot__pb2.Empty.SerializeToString,
            response_deserializer=parkspot__pb2.ParkspotImage.FromString,
        )
        self.SetBoundingBoxes = channel.unary_unary(
            '/parkspot.Parkspot/SetBoundingBoxes',
            request_serializer=parkspot__pb2.BoundingBoxes.SerializeToString,
            response_deserializer=parkspot__pb2.Empty.FromString,
        )
        self.Ping = channel.unary_unary(
            '/parkspot.Parkspot/Ping',
            request_serializer=parkspot__pb2.Empty.SerializeToString,
            response_deserializer=parkspot__pb2.Empty.FromString,
        )
        self.GetAccessPoints = channel.unary_unary(
            '/parkspot.Parkspot/GetAccessPoints',
            request_serializer=parkspot__pb2.Empty.SerializeToString,
            response_deserializer=parkspot__pb2.AccessPoints.FromString,
        )
        self.Connect = channel.unary_unary(
            '/parkspot.Parkspot/Connect',
            request_serializer=parkspot__pb2.LoginInformation.SerializeToString,
            response_deserializer=parkspot__pb2.Empty.FromString,
        )
        self.Ok = channel.unary_unary(
            '/parkspot.Parkspot/Ok',
            request_serializer=parkspot__pb2.Empty.SerializeToString,
            response_deserializer=parkspot__pb2.Empty.FromString,
        )


class ParkspotServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def GetImage(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetValidatedImage(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetBoundingBoxes(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ping(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAccessPoints(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Connect(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Ok(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ParkspotServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetImage': grpc.unary_unary_rpc_method_handler(
            servicer.GetImage,
            request_deserializer=parkspot__pb2.Empty.FromString,
            response_serializer=parkspot__pb2.ParkspotImage.SerializeToString,
        ),
        'GetValidatedImage': grpc.unary_unary_rpc_method_handler(
            servicer.GetValidatedImage,
            request_deserializer=parkspot__pb2.Empty.FromString,
            response_serializer=parkspot__pb2.ParkspotImage.SerializeToString,
        ),
        'SetBoundingBoxes': grpc.unary_unary_rpc_method_handler(
            servicer.SetBoundingBoxes,
            request_deserializer=parkspot__pb2.BoundingBoxes.FromString,
            response_serializer=parkspot__pb2.Empty.SerializeToString,
        ),
        'Ping': grpc.unary_unary_rpc_method_handler(
            servicer.Ping,
            request_deserializer=parkspot__pb2.Empty.FromString,
            response_serializer=parkspot__pb2.Empty.SerializeToString,
        ),
        'GetAccessPoints': grpc.unary_unary_rpc_method_handler(
            servicer.GetAccessPoints,
            request_deserializer=parkspot__pb2.Empty.FromString,
            response_serializer=parkspot__pb2.AccessPoints.SerializeToString,
        ),
        'Connect': grpc.unary_unary_rpc_method_handler(
            servicer.Connect,
            request_deserializer=parkspot__pb2.LoginInformation.FromString,
            response_serializer=parkspot__pb2.Empty.SerializeToString,
        ),
        'Ok': grpc.unary_unary_rpc_method_handler(
            servicer.Ok,
            request_deserializer=parkspot__pb2.Empty.FromString,
            response_serializer=parkspot__pb2.Empty.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'parkspot.Parkspot', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
